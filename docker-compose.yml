version: "3.5"
services:

  acme-ln:
    container_name: acme-ln
    image: neilpang/acme.sh:latest
    restart: always
    volumes:
      - /home/lokanx/docker/bin/acme/acme.sh-docker.sh:/acme.sh-docker.sh:ro
      - /home/lokanx/docker/bin/acme/acme.sh-export.sh:/acme.sh-export.sh:ro
      - ${ACME_LN_HOME_DIR:-./acme.sh}:/acme.sh
      - ${ACME_LN_HOME_DIR}/certs:/certs
      - /home/lokanx/docker/bin/acme/acme.sh-updatecerts.sh:/acme.sh/updatecerts.sh:ro
    environment:
      CF_Email: ${ACME_LN_CF_EMAIL}
      CF_Key: ${ACME_LN_CF_KEY}
      CF_Token: ${ACME_LN_CF_TOKEN}
      CF_Account_ID: ${ACME_LN_CF_ACCOUNT_ID}
      CF_Zone_ID: ${ACME_LN_CF_ZONE_ID}
      DNS_API: ${ACME_LN_DNS_API}
      DOMAIN_NAME: ${ACME_LN_DOMAIN}
      ACME_SH_EMAIL: ${ACME_LN_SH_ENAIL}
      ACME_SH_CA: ${ACME_LN_CA}
    command: sh ./acme.sh-docker.sh

  acme-ds:
    container_name: acme-ds
    restart: always
    image: neilpang/acme.sh:latest
    volumes:
      - /home/lokanx/docker/bin/acme/acme.sh-docker.sh:/acme.sh-docker.sh:ro
      - /home/lokanx/docker/bin/acme/acme.sh-export.sh:/acme.sh-export.sh:ro
      - ${ACME_DS_HOME_DIR:-./acme.sh}:/acme.sh
      - ${ACME_DS_HOME_DIR}/certs:/certs
      - /home/lokanx/docker/bin/acme/acme.sh-updatecerts.sh:/acme.sh/updatecerts.sh:ro
    environment:
      CF_Email: ${ACME_DS_CF_EMAIL}
      CF_Key: ${ACME_DS_CF_KEY}
      CF_Token: ${ACME_DS_CF_TOKEN}
      CF_Account_ID: ${ACME_DS_CF_ACCOUNT_ID}
      CF_Zone_ID: ${ACME_DS_CF_ZONE_ID}
      DNS_API: ${ACME_DS_DNS_API}
      DOMAIN_NAME: ${ACME_DS_DOMAIN}
      ACME_SH_EMAIL: ${ACME_DS_SH_ENAIL}
      ACME_SH_CA: ${ACME_DS_CA}
    command: sh ./acme.sh-docker.sh

  frigate:
    container_name: frigate
    privileged: true # this may not be necessary for all setups
    restart: always
    image: blakeblackshear/frigate:stable-amd64
    devices:
      - /dev/bus/usb:/dev/bus/usb
      - /dev/dri/renderD128 # for intel hwaccel, needs to be updated for your hardware
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /srv/docker/frigate/config.yml:/config/config.yml:ro
      - /srv/docker/frigate/media:/media/frigate
      - type: tmpfs # Optional: 1GB of memory, reduces SSD/SD Card wear
        target: /tmp/cache
        tmpfs:
          size: 1000000000
    ports:
      - '5000:5000'
      - '1935:1935' # RTMP feeds
    environment:
      FRIGATE_RTSP_PASSWORD: '${FRIGATE_FRIGATE_RTSP_PASSWORD}'

  mariadb:
    container_name: mariadb
    image: mariadb
    restart: always
    ports:
      - 3306:3306
    network_mode: bridge
    environment:
      MYSQL_ROOT_PASSWORD: ${MARIADB_MYSQL_ROOT_PASSWORD}
    volumes:
      - /srv/docker/mariadb/conf:/etc/mysql
      - /srv/docker/mariadb/data:/var/lib/mysql
      - /srv/docker/mariadb/bu:/var/lib/mysql-bup

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    depends_on:
      - mariadb
    ports:
      - 13306:8080
    network_mode: bridge
    environment:
      MYSQL_ROOT_PASSWORD: ${MARIADB_MYSQL_ROOT_PASSWORD}

  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto
    restart: always
    depends_on:
      - acme-ln
    ports:
      - 1883:1883
      - 8883:8883
      - 8083:8083
    network_mode: bridge
    volumes:
      - /srv/docker/mosquitto:/mosquitto
      - ${MQTT_CERT_DIR}:/etc/letsencrypt

  deconz:
    image: deconzcommunity/deconz:stable
    container_name: deconz
    network_mode: bridge
    privileged: true
    restart: always
    ports:
      - 9080:80
      - 9443:9443
      - 9590:5900
    volumes:
      - /srv/docker/deconz/data:/opt/deCONZ
      - /srv/docker/deconz/otau:/root/otau
      - /home/lokanx/docker/bin/ikea-ota-download.py:/ikea-ota-download.py
      - /dev/ttyACM-ZIGBEE:/dev/ttyACM-ZIGBEE
    devices:
      - /dev/ttyACM1
      - /dev/ttyACM0
      - /dev/ttyACM-ZIGBEE
    environment:
      - DECONZ_WEB_PORT=80
      - DECONZ_WS_PORT=9443
      - DEBUG_INFO=1
      - DEBUG_APS=0
      - DEBUG_ZCL=0
      - DEBUG_ZDP=0
      - DEBUG_OTAU=1
      - DECONZ_DEVICE=/dev/ttyACM-ZIGBEE
      - DECONZ_VNC_MODE=1
      - DECONZ_VNC_PORT=5900
      - DECONZ_VNC_PASSWORD=${DECONZ_DECONZ_VNC_PASSWORD}

  zwavejs2mqtt:
    container_name: zwavejs2mqtt
    image: zwavejs/zwavejs2mqtt
    restart: always
    depends_on:
      - mosquitto
      - home-assistant-home
    tty: true
    stop_signal: SIGINT
    privileged: true
    environment:
      - SESSION_SECRET=${ZWAVEJS2MQTT_SESSION_SECRET}
      - TZ=${GENERAL_TZ}
    network_mode: bridge
    volumes:
      - /srv/docker/zwavejs2mqtt:/usr/src/app/store
      - /dev/ttyACM-ZWAVE:/dev/ttyACM-ZWAVE
    devices:
      - /dev/ttyACM0:/dev/ttyACM0
      - /dev/ttyACM1:/dev/ttyACM1
      - /dev/ttyACM-ZWAVE:/dev/ttyACM-ZWAVE
    ports:
      - "8091:8091" # port for web interface
      - "3000:3000" # port for zwave-js websocket server

  home-assistant-home:
    container_name: home-assistant-home
    image: homeassistant/home-assistant
    restart: always
    depends_on:
      - mariadb
      - mosquitto
      - deconz
    volumes:
      - /srv/docker/homeautomation/ha-home:/config
      - /etc/localtime:/etc/localtime:ro
      - /srv/shared-data:/srv/shared-data
      - /srv/docker/frigate/media:/srv/frigate/media:ro
      - /home/lokanx/docker/init/home-assistant-home.init.sh:/etc/docker-init/home-assistant-home.init.sh
      - /home/lokanx/docker/bin/wait-for-it.sh:/etc/docker-init/wait-for-it.sh
      - /home/lokanx/docker/bin/ha-run.bash:/etc/services.d/home-assistant/run
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/lokanx/docker-data/homeautomation/gollum-certs:/docker-certs
    environment:
      - DOCKER_TLS_VERIFY=1
      - DOCKER_CERT_PATH=/docker-certs
    ports:
      - 8123:8123
    network_mode: host
    privileged: true

  cloud9-home:
    container_name: cloud9-home
    image: kdelfour/cloud9-docker
    restart: always
    depends_on:
      - home-assistant-home
    volumes:
      - /srv/docker/homeautomation/ha-home:/workspace
    ports:
      - 9180:80
    network_mode: bridge

  nodered:
    container_name: nodered
    image: nodered/node-red-docker:v8
    user: '${NODERED_USER}'
    restart: always
    depends_on:
      - home-assistant-home
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /srv/docker/nodered:/data
      - /srv/shared-data:/srv/shared-data
    ports:
      - 1880:1880
      - 9229:9229

  app-daemon:
      container_name: app-daemon
      image: acockburn/appdaemon:latest
      restart: always
      depends_on:
        - home-assistant-home
      volumes:
        - /srv/docker/app-daemon:/conf
        - /srv/docker/homeautomation/ha-home:/ha-home:ro
        - /etc/localtime:/etc/localtime:ro
      environment:
        - HA_URL=http://192.168.1.191:8123
        - TOKEN=${APP_DAEMON_TOKEN}
        - DASH_URL=http://192.168.1.191:5050
      ports:
        - 5050:5050


